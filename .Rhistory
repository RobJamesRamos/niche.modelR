getwd()
devtools::load_all()
hello()
niche.modelR::hello()
devtools::document()
?glm_model
devtools::document()
?glm_model
devtools::document()
?glm_model
devtools::document()
devtools::document()
?glm_model
devtools::document()
?glm_model
devtools::document()
?glm_model
library(niche.modelR)
?glm_model
library(niche.modelR)
devtools::document()
devtools::document()
?glm_model
library(niche.modelR)
?glm_model
devtools::document()
?glm_model
library(niche.modelR)
install.packages("devtools")
install.packages("devtools")
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("testthat")
install.packages("knitr")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(niche.modelR)
?predict_model()
?niche.modelR
library(niche.modelR)
?niche.modelR
library(niche.modelR)
?niche.modelR
devtools::document()
library(niche.modelR)
?niche.modelR
devtools::document()
?niche.modelR
library(niche.modelR)
devtools::document()
devtools::document()
devtools::document()
library(niche.modelR)
knitr::opts_chunk$set(echo = FALSE, cache = TRUE)
if(!require(reticulate)){
install.packages("reticulate",repos = "https://cloud.r-project.org")
library(reticulate)}
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
n <- str_replace(
string = basename((input_rasters)),
pattern = '\\.[^.]*$',
replacement = '')
if(!require(stringr)){
install.packages("stringr",repos = "https://cloud.r-project.org")
library(stringr)}
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
n <- str_replace(
string = basename((input_rasters)),
pattern = '\\.[^.]*$',
replacement = '')
predictors <- stack(input_rasters)
setwd("~/Dropbox/classes/2018_spring/carpentry/ramos_dcei_proposal")
if(!require(stringr)){
install.packages("stringr",repos = "https://cloud.r-project.org")
library(stringr)}
rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
n <- str_replace(
string = basename((input_rasters)),
pattern = '\\.[^.]*$',
replacement = '')
predictors <- stack(paste0(rasters))
predictors <- stack(paste0(list(rasters)))
rasters <- list(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
predictors <- stack(paste0(rasters))
predictors <- stack(paste0(rasters)
predictors <- stack(paste0(rasters)
predictors <- stack(paste0(rasters)
predictors <- stack(paste0(rasters))
predictors <- stack(paste0(rasters))
rasters <- list(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
predictors <- stack(paste0(rasters))
# 2) Creates a raster stack
# 3) Checks the point data for inconsistency problems and removes blanks
#
# Args
# rasters            A string of raster file names
# points             The name of a .csv file
#
# Output
# predictors               A raster stack
# plots                    A data.table
rasters <- list(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
if(!require(data.table)){
install.packages("data.table",repos = "https://cloud.r-project.org")
library(data.table)}
data_import <- function(rasters, points){
predictors <- stack(paste0(rasters))
plots <- na.omit(fread(paste0(points)))
list(predictors,plots)
}
data_list <- data_import(input_rasters,input_points)
library(raster)
predictors <- stack(paste0(rasters))
rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
n <- str_replace(
string = basename((input_rasters)),
pattern = '\\.[^.]*$',
replacement = '')
predictors <- stack(paste0(rasters))
names(predictors)
names(predictors) <- n
names(predictors)
ta.table)){
install.p
# 3) Checks the point data for inconsistency problems and removes blanks
#
# Args
# rasters            A string of raster file names
# points             The name of a .csv file
#
# Output
# plots                    A spatial_points layer
if(!require(data.table)){
install.packages("data.table",repos = "https://cloud.r-project.org")
library(data.table)}
#Data Import
source('raster_import.R')
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- list(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- list(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
plots <- data_import(predictors,input_points)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
plots <- data_import(predictors,input_points)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
plots <- data_import(predictors,input_points)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
plots <- data_import(predictors,input_points)
plots <- data_import(predictors,input_points)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
plots <- data_import(predictors,input_points)
#Data Import
source('raster_import.R')
source('data_import.R')
library(raster)
input_rasters <- c(
'data/PRISM/PRISM_ppt_30yr_normal_800mM2_annual_asc/ppt_30yr_n.asc',
'data/PRISM/PRISM_tmean_30yr_normal_800mM2_annual_asc/tmean_30yr.asc',
'data/PRISM/PRISM_us_dem_800m_asc/us_dem.asc')
input_points <- 'data/tree_table.csv'
predictors <- raster_import(input_rasters)
plots <- data_import(predictors,input_points)
#Create the GLM models
source('glm_model.R')
#Create the GLM models
source('glm_model.R')
input_formula <- 'treecount ~ us_dem + tmean_30yr + ppt_30yr_n'
glm_list <- glm_model(input_plots,input_formula)
glm_list <- glm_model(plots,input_formula)
#Create the GLM models
source('glm_model.R')
input_formula <- 'treecount ~ us_dem + tmean_30yr + ppt_30yr_n'
glm <- glm_model(plots,input_formula)
#Create the GLM models
source('glm_model.R')
source('psuedo_r2.R')
#Create the GLM models
source('glm_model.R')
source('psuedo_r2.R')
input_formula <- 'treecount ~ us_dem + tmean_30yr + ppt_30yr_n'
glm <- glm_model(plots,input_formula)
r2 <- psuedo_r2(glm)
#Plots and figures
stargazer(model1, model2, type='latex',
title='GLM Models',
header=FALSE,
float = TRUE,
no.space = TRUE,
report = 'vc*',
covariate.labels = c("Elevation", "Aspect", "Slope", "Mean Temperature",
"Mean Precipitation"),
dep.var.caption = "Response Variable",
dep.var.labels = "Tree Occurance",
add.lines = list(c('Psuedo R$^2$',
round(r2_1,4),
round(r2_2,4))))
#Plots and figures
if(!require(stargazer)){
install.packages("stargazer",repos = "https://cloud.r-project.org")
library(stargazer)}
stargazer(model1, type='latex',
title='GLM Models',
header=FALSE,
float = TRUE,
no.space = TRUE,
report = 'vc*',
covariate.labels = c("Elevation", "Aspect", "Slope", "Mean Temperature",
"Mean Precipitation"),
dep.var.caption = "Response Variable",
dep.var.labels = "Tree Occurance",
add.lines = list(c('Psuedo R$^2$',
round(r2_1,4))))
#Plots and figures
if(!require(stargazer)){
install.packages("stargazer",repos = "https://cloud.r-project.org")
library(stargazer)}
stargazer(model, type='latex',
title='GLM Models',
header=FALSE,
float = TRUE,
no.space = TRUE,
report = 'vc*',
covariate.labels = c("Elevation", "Aspect", "Slope", "Mean Temperature",
"Mean Precipitation"),
dep.var.caption = "Response Variable",
dep.var.labels = "Tree Occurance",
add.lines = list(c('Psuedo R$^2$',
round(r2_1,4))))
#Plots and figures
if(!require(stargazer)){
install.packages("stargazer",repos = "https://cloud.r-project.org")
library(stargazer)}
stargazer(model, type='latex',
title='GLM Models',
header=FALSE,
float = TRUE,
no.space = TRUE,
report = 'vc*',
covariate.labels = c("Elevation", "Aspect", "Slope", "Mean Temperature",
"Mean Precipitation"),
dep.var.caption = "Response Variable",
dep.var.labels = "Tree Occurance",
add.lines = list(c('Psuedo R$^2$',
round(r2_1,4))))
#Plots and figures
if(!require(stargazer)){
install.packages("stargazer",repos = "https://cloud.r-project.org")
library(stargazer)}
stargazer(glm, type='latex',
title='GLM Models',
header=FALSE,
float = TRUE,
no.space = TRUE,
report = 'vc*',
covariate.labels = c("Elevation", "Aspect", "Slope", "Mean Temperature",
"Mean Precipitation"),
dep.var.caption = "Response Variable",
dep.var.labels = "Tree Occurance",
add.lines = list(c('Psuedo R$^2$',
round(r2_1,4))))
#Plots and figures
if(!require(stargazer)){
install.packages("stargazer",repos = "https://cloud.r-project.org")
library(stargazer)}
stargazer(glm, type='latex',
title='GLM Models',
header=FALSE,
float = TRUE,
no.space = TRUE,
report = 'vc*',
covariate.labels = c("Elevation", "Aspect", "Slope", "Mean Temperature",
"Mean Precipitation"),
dep.var.caption = "Response Variable",
dep.var.labels = "Tree Occurance",
add.lines = list(c('Psuedo R$^2$',
round(r2,4))))
knitr::opts_chunk$set(echo = FALSE, cache = TRUE)
if(!require(reticulate)){
install.packages("reticulate",repos = "https://cloud.r-project.org")
library(reticulate)}
if(!require(stargazer)){
install.packages("stargazer",repos = "https://cloud.r-project.org")
library(stargazer)}
#Create the GLM models
source('glm_model.R')
source('psuedo_r2.R')
input_formula <- 'treecount ~ us_dem + tmean_30yr + ppt_30yr_n'
glm <- glm_model(plots,input_formula)
r2 <- psuedo_r2(glm)
pb <- predict(
object = predictors,
model = model1,
ext=extent(predictors))
#Create the GLM models
source('glm_model.R')
source('psuedo_r2.R')
input_formula <- 'treecount ~ us_dem + tmean_30yr + ppt_30yr_n'
glm <- glm_model(plots,input_formula)
r2 <- psuedo_r2(glm)
pb <- predict(
object = predictors,
model = glm,
ext=extent(predictors))
setwd("~/Dropbox/classes/2018_spring/carpentry/ramos_dcei_proposal")
install.packages(c("ade4", "ape", "BH", "bindr", "bindrcpp", "blob", "car", "chron", "curl", "DBI", "deldir", "digest", "dotCall64", "fields", "GenSA", "gsubfn", "hms", "htmlwidgets", "httpuv", "igraph", "iotools", "irlba", "lazyeval", "lme4", "lubridate", "maps", "msm", "mvtnorm", "np", "openssl", "pdftools", "phangorn", "plogr", "plotrix", "psych", "quantreg", "Rcpp", "RcppArmadillo", "RcppEigen", "reshape2", "rgdal", "rgeos", "rgl", "rlang", "rmarkdown", "RSQLite", "scatterplot3d", "sourcetools", "sp", "spam", "stringi", "stringr", "subplex", "tibble", "vegan", "VGAM", "viridis", "viridisLite", "withr", "yaml"))
devtools::use_package("dplyr")
devtools::document()
devtools::document()
devtools::document()
install.packages("yaml")
devtools::document()
devtools::document()
install.packages("sp")
devtools::document()
?niche.modelR
library(niche.modelR)
?niche.modelR
devtools::document()
